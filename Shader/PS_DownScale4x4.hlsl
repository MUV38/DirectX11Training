//--------------------------------------------------------------------------------------
//		テクスチャ
//--------------------------------------------------------------------------------------
Texture2D	decaleTex : register( t0 );
SamplerState	sampLinear : register( s0 );

//--------------------------------------------------------------------------------------
//		定数
//--------------------------------------------------------------------------------------
static const int MAX_SAMPLE = 16;

//--------------------------------------------------------------------------------------
//		コンスタントバッファ
//--------------------------------------------------------------------------------------
cbuffer CBDownScale4x4 : register(b0)
{
	float2 sampleOffset[MAX_SAMPLE];
};

//--------------------------------------------------------------------------------------
//		入出力レイアウト
//--------------------------------------------------------------------------------------
struct VS_OUTPUT
{
    float4 Pos : SV_POSITION;
	float2 Tex : TEXCOORD0;
	float4 Color : COLOR0;
};


//--------------------------------------------------------------------------------------
//		ピクセルシェーダー
//--------------------------------------------------------------------------------------
float4	main( VS_OUTPUT In ) : SV_TARGET
{
	float2 Tex = float2(In.Tex.y, In.Tex.x);

	float4 sample = 0.0f;
	for (int i = 0; i < MAX_SAMPLE; i++) {
		sample += decaleTex.Sample(sampLinear, Tex + sampleOffset[i]);
	}

	return float4((sample / 16.0f).rgb, 1.0f);
}